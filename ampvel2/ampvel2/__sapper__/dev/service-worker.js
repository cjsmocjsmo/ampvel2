(function () {
	'use strict';

	// This file is generated by Sapper â€” do not edit it!
	const timestamp = 1617471386880;

	const files = [
		"/service-worker-index.html",
		"/favicon.png",
		"/global.css",
		"/logo-192.png",
		"/logo-512.png",
		"/manifest.json"
	];

	const shell = [
		"/client/client.020de4a9.js",
		"/client/inject_styles.5607aec6.js",
		"/client/index.8600c54d.js",
		"/client/Controls.9ce3caaa.js",
		"/client/nextgeneration.bc048794.js",
		"/client/raisedbywolves.04797781.js",
		"/client/alteredcarbon.aac3d3d8.js",
		"/client/forallmankind.942069e8.js",
		"/client/indianajones.04bf4982.js",
		"/client/jurassicpark.6ca0a1f6.js",
		"/client/alienworlds.6dd4f831.js",
		"/client/brucewillis.475d0d6c.js",
		"/client/documentary.01dfcd65.js",
		"/client/harrypotter.30dc404c.js",
		"/client/lostinspace.7f0daf29.js",
		"/client/mandalorian.f703ea35.js",
		"/client/wandavision.9436ede8.js",
		"/client/enterprise.f87d244d.js",
		"/client/lowerdecks.d30bb57b.js",
		"/client/meninblack.c957ce9c.js",
		"/client/seancarrol.78c3e251.js",
		"/client/superheros.ec54c397.js",
		"/client/discovery.9a94bfee.js",
		"/client/johnwayne.4de25ab0.js",
		"/client/spacetime.241809ab.js",
		"/client/tomcruize.4d641cdd.js",
		"/client/cartoons.04f70025.js",
		"/client/godzilla.d2bcab9d.js",
		"/client/johnwick.258a9759.js",
		"/client/kingsmen.d226f942.js",
		"/client/lastship.844099b0.js",
		"/client/startrek.cf3b0a08.js",
		"/client/starwars.06e621f5.js",
		"/client/fantasy.3d108bfe.js",
		"/client/orville.1e1e3a38.js",
		"/client/pirates.8a97b8ea.js",
		"/client/riddick.de8540d3.js",
		"/client/therock.a18f0b7c.js",
		"/client/tremors.c06d9dea.js",
		"/client/tvshows.ffa8a4dd.js",
		"/client/voyager.29c02f55.js",
		"/client/action.8c5b3bd2.js",
		"/client/comedy.65926e2b.js",
		"/client/picard.a0b91c5f.js",
		"/client/drama.6d9f62fb.js",
		"/client/scifi.4a1a9307.js",
		"/client/misc.46ac5c26.js",
		"/client/sttv.8dcd3b68.js",
		"/client/xmen.dcb47e89.js",
		"/client/sapper-dev-client.1e7a4a5e.js"
	];

	const ASSETS = `cache${timestamp}`;

	// `shell` is an array of all the files generated by the bundler,
	// `files` is an array of everything in the `static` directory
	const to_cache = shell.concat(files);
	const staticAssets = new Set(to_cache);

	self.addEventListener('install', event => {
		event.waitUntil(
			caches
				.open(ASSETS)
				.then(cache => cache.addAll(to_cache))
				.then(() => {
					self.skipWaiting();
				})
		);
	});

	self.addEventListener('activate', event => {
		event.waitUntil(
			caches.keys().then(async keys => {
				// delete old caches
				for (const key of keys) {
					if (key !== ASSETS) await caches.delete(key);
				}

				self.clients.claim();
			})
		);
	});


	/**
	 * Fetch the asset from the network and store it in the cache. 
	 * Fall back to the cache if the user is offline.
	 */
	async function fetchAndCache(request) {
		const cache = await caches.open(`offline${timestamp}`);

		try {
			const response = await fetch(request);
			cache.put(request, response.clone());
			return response;
		} catch (err) {
			const response = await cache.match(request);
			if (response) return response;

			throw err;
		}
	}

	self.addEventListener('fetch', event => {
		if (event.request.method !== 'GET' || event.request.headers.has('range')) return;

		const url = new URL(event.request.url);

		// don't try to handle e.g. data: URIs
		const isHttp = url.protocol.startsWith('http');
		const isDevServerRequest = url.hostname === self.location.hostname && url.port !== self.location.port;
		const isStaticAsset = url.host === self.location.host && staticAssets.has(url.pathname);
		const skipBecauseUncached = event.request.cache === 'only-if-cached' && !isStaticAsset;

		if (isHttp && !isDevServerRequest && !skipBecauseUncached) {
			event.respondWith(
				(async () => {
					// always serve static files and bundler-generated assets from cache.
					// if your application has other URLs with data that will never change,
					// set this variable to true for them and they will only be fetched once.
					const cachedAsset = isStaticAsset && await caches.match(event.request);

					// for pages, you might want to serve a shell `service-worker-index.html` file,
					// which Sapper has generated for you. It's not right for every
					// app, but if it's right for yours then uncomment this section
					/*
					if (!cachedAsset && url.origin === self.origin && routes.find(route => route.pattern.test(url.pathname))) {
						return caches.match('/service-worker-index.html');
					}
					*/

					return cachedAsset || fetchAndCache(event.request);
				})()
			);
		}
	});

}());
//# sourceMappingURL=data:application/json;charset=utf-8;base64,

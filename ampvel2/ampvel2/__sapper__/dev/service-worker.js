(function () {
	'use strict';

	// This file is generated by Sapper â€” do not edit it!
	const timestamp = 1616982006019;

	const files = [
		"/service-worker-index.html",
		"/favicon.png",
		"/global.css",
		"/logo-192.png",
		"/logo-512.png",
		"/manifest.json"
	];

	const shell = [
		"/client/client.87fccb41.js",
		"/client/inject_styles.5607aec6.js",
		"/client/index.08433e23.js",
		"/client/Controls.d4e47d52.js",
		"/client/nextgeneration.218867b0.js",
		"/client/raisedbywolves.b3c3001e.js",
		"/client/alteredcarbon.3b66c2b9.js",
		"/client/forallmankind.b4e7ef5c.js",
		"/client/indianajones.10ebaa40.js",
		"/client/jurassicpark.497316b5.js",
		"/client/brucewillis.836843e0.js",
		"/client/documentary.1959fe29.js",
		"/client/harrypotter.277feb3a.js",
		"/client/lostinspace.51db33fe.js",
		"/client/mandalorian.b4e4bd49.js",
		"/client/enterprise.a9d70cd3.js",
		"/client/lowerdecks.1a593469.js",
		"/client/meninblack.c6c89fce.js",
		"/client/seancarrol.7a0a565e.js",
		"/client/superheros.37316100.js",
		"/client/discovery.9348a57c.js",
		"/client/johnwayne.591c427b.js",
		"/client/spacetime.4d26881f.js",
		"/client/tomcruize.dee0e536.js",
		"/client/cartoons.43347b8b.js",
		"/client/godzilla.ff68b1ad.js",
		"/client/johnwick.397b0600.js",
		"/client/kingsmen.a44de489.js",
		"/client/lastship.622f6641.js",
		"/client/startrek.8d5c5507.js",
		"/client/starwars.5a25d269.js",
		"/client/fantasy.8a33c21b.js",
		"/client/orville.f5caa359.js",
		"/client/pirates.a3d23caa.js",
		"/client/riddick.606e588e.js",
		"/client/therock.01dcb28f.js",
		"/client/tremors.46571a17.js",
		"/client/tvshows.596d086d.js",
		"/client/voyager.26802953.js",
		"/client/action.72748538.js",
		"/client/comedy.bdc00d91.js",
		"/client/picard.7e133983.js",
		"/client/drama.864340b5.js",
		"/client/scifi.2da383d6.js",
		"/client/misc.2cc1e17a.js",
		"/client/sttv.0c35d1ae.js",
		"/client/xmen.cb7de957.js",
		"/client/sapper-dev-client.1e7a4a5e.js"
	];

	const ASSETS = `cache${timestamp}`;

	// `shell` is an array of all the files generated by the bundler,
	// `files` is an array of everything in the `static` directory
	const to_cache = shell.concat(files);
	const staticAssets = new Set(to_cache);

	self.addEventListener('install', event => {
		event.waitUntil(
			caches
				.open(ASSETS)
				.then(cache => cache.addAll(to_cache))
				.then(() => {
					self.skipWaiting();
				})
		);
	});

	self.addEventListener('activate', event => {
		event.waitUntil(
			caches.keys().then(async keys => {
				// delete old caches
				for (const key of keys) {
					if (key !== ASSETS) await caches.delete(key);
				}

				self.clients.claim();
			})
		);
	});


	/**
	 * Fetch the asset from the network and store it in the cache. 
	 * Fall back to the cache if the user is offline.
	 */
	async function fetchAndCache(request) {
		const cache = await caches.open(`offline${timestamp}`);

		try {
			const response = await fetch(request);
			cache.put(request, response.clone());
			return response;
		} catch (err) {
			const response = await cache.match(request);
			if (response) return response;

			throw err;
		}
	}

	self.addEventListener('fetch', event => {
		if (event.request.method !== 'GET' || event.request.headers.has('range')) return;

		const url = new URL(event.request.url);

		// don't try to handle e.g. data: URIs
		const isHttp = url.protocol.startsWith('http');
		const isDevServerRequest = url.hostname === self.location.hostname && url.port !== self.location.port;
		const isStaticAsset = url.host === self.location.host && staticAssets.has(url.pathname);
		const skipBecauseUncached = event.request.cache === 'only-if-cached' && !isStaticAsset;

		if (isHttp && !isDevServerRequest && !skipBecauseUncached) {
			event.respondWith(
				(async () => {
					// always serve static files and bundler-generated assets from cache.
					// if your application has other URLs with data that will never change,
					// set this variable to true for them and they will only be fetched once.
					const cachedAsset = isStaticAsset && await caches.match(event.request);

					// for pages, you might want to serve a shell `service-worker-index.html` file,
					// which Sapper has generated for you. It's not right for every
					// app, but if it's right for yours then uncomment this section
					/*
					if (!cachedAsset && url.origin === self.origin && routes.find(route => route.pattern.test(url.pathname))) {
						return caches.match('/service-worker-index.html');
					}
					*/

					return cachedAsset || fetchAndCache(event.request);
				})()
			);
		}
	});

}());
//# sourceMappingURL=data:application/json;charset=utf-8;base64,

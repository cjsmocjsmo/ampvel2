import { y as writable, S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, v as validate_slots, z as globals, a as svg_element, t as text, c as claim_element, b as children, f as detach_dev, e as claim_text, g as attr_dev, h as add_location, j as insert_dev, k as append_dev, A as listen_dev, n as noop, B as run_all } from './client.d545f956.js';

//MediaCenter
const omxaddr = writable(`http://192.168.0.42:8888`);


//movies http
// export const movaddr = writable(`http://192.168.0.42:8081`)
const movaddr = writable(`http://192.168.0.42:8062`);

//omxserver
const movhttp = writable(`192.168.0.42:8181`);

/* src/components/Controls.svelte generated by Svelte v3.30.0 */

const { console: console_1 } = globals;
const file = "src/components/Controls.svelte";

function create_fragment(ctx) {
	let svg;
	let circle0;
	let circle1;
	let circle2;
	let circle3;
	let text0;
	let t0;
	let text1;
	let t1;
	let text2;
	let t2;
	let text3;
	let t3;
	let mounted;
	let dispose;

	const block = {
		c: function create() {
			svg = svg_element("svg");
			circle0 = svg_element("circle");
			circle1 = svg_element("circle");
			circle2 = svg_element("circle");
			circle3 = svg_element("circle");
			text0 = svg_element("text");
			t0 = text("Play");
			text1 = svg_element("text");
			t1 = text("Next");
			text2 = svg_element("text");
			t2 = text("Prev");
			text3 = svg_element("text");
			t3 = text("Stop");
			this.h();
		},
		l: function claim(nodes) {
			svg = claim_element(nodes, "svg", { viewBox: true }, 1);
			var svg_nodes = children(svg);

			circle0 = claim_element(
				svg_nodes,
				"circle",
				{
					cx: true,
					cy: true,
					r: true,
					stroke: true,
					"stroke-width": true,
					fill: true
				},
				1
			);

			children(circle0).forEach(detach_dev);

			circle1 = claim_element(
				svg_nodes,
				"circle",
				{
					cx: true,
					cy: true,
					r: true,
					stroke: true,
					"stroke-width": true,
					fill: true
				},
				1
			);

			children(circle1).forEach(detach_dev);

			circle2 = claim_element(
				svg_nodes,
				"circle",
				{
					cx: true,
					cy: true,
					r: true,
					stroke: true,
					"stroke-width": true,
					fill: true
				},
				1
			);

			children(circle2).forEach(detach_dev);

			circle3 = claim_element(
				svg_nodes,
				"circle",
				{
					cx: true,
					cy: true,
					r: true,
					stroke: true,
					"stroke-width": true,
					fill: true
				},
				1
			);

			children(circle3).forEach(detach_dev);

			text0 = claim_element(
				svg_nodes,
				"text",
				{
					x: true,
					y: true,
					"font-size": true,
					fill: true
				},
				1
			);

			var text0_nodes = children(text0);
			t0 = claim_text(text0_nodes, "Play");
			text0_nodes.forEach(detach_dev);

			text1 = claim_element(
				svg_nodes,
				"text",
				{
					x: true,
					y: true,
					"font-size": true,
					fill: true
				},
				1
			);

			var text1_nodes = children(text1);
			t1 = claim_text(text1_nodes, "Next");
			text1_nodes.forEach(detach_dev);

			text2 = claim_element(
				svg_nodes,
				"text",
				{
					x: true,
					y: true,
					"font-size": true,
					fill: true
				},
				1
			);

			var text2_nodes = children(text2);
			t2 = claim_text(text2_nodes, "Prev");
			text2_nodes.forEach(detach_dev);

			text3 = claim_element(
				svg_nodes,
				"text",
				{
					x: true,
					y: true,
					"font-size": true,
					fill: true
				},
				1
			);

			var text3_nodes = children(text3);
			t3 = claim_text(text3_nodes, "Stop");
			text3_nodes.forEach(detach_dev);
			svg_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(circle0, "cx", "0");
			attr_dev(circle0, "cy", "0");
			attr_dev(circle0, "r", "205");
			attr_dev(circle0, "stroke", "black");
			attr_dev(circle0, "stroke-width", "1");
			attr_dev(circle0, "fill", "purple");
			add_location(circle0, file, 83, 1, 2060);
			attr_dev(circle1, "cx", "0");
			attr_dev(circle1, "cy", "0");
			attr_dev(circle1, "r", "145");
			attr_dev(circle1, "stroke", "black");
			attr_dev(circle1, "stroke-width", "1");
			attr_dev(circle1, "fill", "blue");
			add_location(circle1, file, 84, 1, 2168);
			attr_dev(circle2, "cx", "0");
			attr_dev(circle2, "cy", "0");
			attr_dev(circle2, "r", "95");
			attr_dev(circle2, "stroke", "black");
			attr_dev(circle2, "stroke-width", "1");
			attr_dev(circle2, "fill", "white");
			add_location(circle2, file, 85, 1, 2278);
			attr_dev(circle3, "cx", "0");
			attr_dev(circle3, "cy", "0");
			attr_dev(circle3, "r", "50");
			attr_dev(circle3, "stroke", "black");
			attr_dev(circle3, "stroke-width", "1");
			attr_dev(circle3, "fill", "red");
			add_location(circle3, file, 86, 1, 2384);
			attr_dev(text0, "x", "7");
			attr_dev(text0, "y", "20");
			attr_dev(text0, "font-size", ".75em");
			attr_dev(text0, "fill", "white");
			add_location(text0, file, 87, 1, 2460);
			attr_dev(text1, "x", "56");
			attr_dev(text1, "y", "20");
			attr_dev(text1, "font-size", ".75em");
			attr_dev(text1, "fill", "black");
			add_location(text1, file, 88, 1, 2523);
			attr_dev(text2, "x", "106");
			attr_dev(text2, "y", "20");
			attr_dev(text2, "font-size", ".75em");
			attr_dev(text2, "fill", "white");
			add_location(text2, file, 89, 1, 2616);
			attr_dev(text3, "x", "160");
			attr_dev(text3, "y", "20");
			attr_dev(text3, "font-size", ".75em");
			attr_dev(text3, "fill", "white");
			add_location(text3, file, 90, 1, 2713);
			attr_dev(svg, "viewBox", "0 0 205 35");
			add_location(svg, file, 82, 0, 2032);
		},
		m: function mount(target, anchor) {
			insert_dev(target, svg, anchor);
			append_dev(svg, circle0);
			append_dev(svg, circle1);
			append_dev(svg, circle2);
			append_dev(svg, circle3);
			append_dev(svg, text0);
			append_dev(text0, t0);
			append_dev(svg, text1);
			append_dev(text1, t1);
			append_dev(svg, text2);
			append_dev(text2, t2);
			append_dev(svg, text3);
			append_dev(text3, t3);

			if (!mounted) {
				dispose = [
					listen_dev(circle0, "click", /*handleStopSubmit*/ ctx[1], false, false, false),
					listen_dev(circle1, "click", /*handlePreviousSubmit*/ ctx[2], false, false, false),
					listen_dev(circle2, "click", /*handleNextSubmit*/ ctx[0], false, false, false),
					listen_dev(text1, "click", /*handleNextSubmit*/ ctx[0], false, false, false),
					listen_dev(text2, "click", /*handlePreviousSubmit*/ ctx[2], false, false, false),
					listen_dev(text3, "click", /*handleStopSubmit*/ ctx[1], false, false, false)
				];

				mounted = true;
			}
		},
		p: noop,
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(svg);
			mounted = false;
			run_all(dispose);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("Controls", slots, []);
	let movhttp_value;

	const unsubampvel = movhttp.subscribe(value => {
		movhttp_value = value;
	});

	const ADDR = "http://" + movhttp_value;
	const NADDR = ADDR + "/Next";
	const SADDR = ADDR + "/Stop";
	const PREADDR = ADDR + "/Previous";
	const PADDR = ADDR + "/Pause";
	const PLAYADDR = ADDR + "/Play";

	async function getNext() {
		fetch(NADDR, { mode: "cors", method: "GET" }).then(r => r.json()).then(data => {
			console.log(data);
		}).catch(err => console.log(err));
	}

	let handleNextSubmit = () => {
		let promise = getNext().catch(err => console.log(err));
	};

	async function getStop() {
		fetch(SADDR, { mode: "cors", method: "GET" }).then(r => r.json()).then(data => {
			console.log(data);
		}).catch(err => console.log(err));
	}

	let handleStopSubmit = () => {
		let promise = getStop().catch(err => console.log(err));
	};

	async function getPrevious() {
		fetch(PREADDR, { mode: "cors", method: "GET" }).then(r => r.json()).then(data => {
			console.log(data);
		}).catch(err => console.log(err));
	}

	let handlePreviousSubmit = () => {
		let promise = getPrevious().catch(err => console.log(err));
	};

	async function getPause() {
		fetch(PADDR, { mode: "cors", method: "GET" }).then(r => r.json()).then(data => {
			console.log(data);
		}).catch(err => console.log(err));
	}

	let handlePauseSubmit = () => {
		let promise = getPause().catch(err => console.log(err));
		fuck();
	};

	async function getPlay() {
		fetch(PLAYADDR, { mode: "cors", method: "GET" }).then(r => r.json()).then(data => {
			console.log(data);
		}).catch(err => console.log(err));
	}

	let handlePlaySubmit = () => {
		let promise = getPlay().catch(err => console.log(err));
		fuck();
	};

	let visible = false;

	let fuck = () => {
		if (visible) {
			visible = false;
		} else {
			visible = true;
		}
	};

	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console_1.warn(`<Controls> was created with unknown prop '${key}'`);
	});

	$$self.$capture_state = () => ({
		movhttp,
		movhttp_value,
		unsubampvel,
		ADDR,
		NADDR,
		SADDR,
		PREADDR,
		PADDR,
		PLAYADDR,
		getNext,
		handleNextSubmit,
		getStop,
		handleStopSubmit,
		getPrevious,
		handlePreviousSubmit,
		getPause,
		handlePauseSubmit,
		getPlay,
		handlePlaySubmit,
		visible,
		fuck
	});

	$$self.$inject_state = $$props => {
		if ("movhttp_value" in $$props) movhttp_value = $$props.movhttp_value;
		if ("handleNextSubmit" in $$props) $$invalidate(0, handleNextSubmit = $$props.handleNextSubmit);
		if ("handleStopSubmit" in $$props) $$invalidate(1, handleStopSubmit = $$props.handleStopSubmit);
		if ("handlePreviousSubmit" in $$props) $$invalidate(2, handlePreviousSubmit = $$props.handlePreviousSubmit);
		if ("handlePauseSubmit" in $$props) handlePauseSubmit = $$props.handlePauseSubmit;
		if ("handlePlaySubmit" in $$props) handlePlaySubmit = $$props.handlePlaySubmit;
		if ("visible" in $$props) visible = $$props.visible;
		if ("fuck" in $$props) fuck = $$props.fuck;
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [handleNextSubmit, handleStopSubmit, handlePreviousSubmit];
}

class Controls extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Controls",
			options,
			id: create_fragment.name
		});
	}
}

export { Controls as C, movaddr as m, omxaddr as o };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
